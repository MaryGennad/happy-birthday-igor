const wishes = [
  "üåü–ò–≥–æ—Ä—å!üåü",
  "–ë—ã—Ç—å —Ö–æ—Ä–æ—à–∏–º –Ω–∞—á–∞–ª—å–Ω–∏–∫–æ–º –¥–∞–Ω–æ –Ω–µ –∫–∞–∂–¥–æ–º—É,",
  "–Ω–æ –Ω–∞—à–µ–º—É –∫–æ–ª–ª–µ–∫—Ç–∏–≤—É —Å —Ç–æ–±–æ–π –æ—á–µ–Ω—å –ø–æ–≤–µ–∑–ª–æ!",
  "–≠—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–π —Ç–∞–ª–∞–Ω—Ç ‚Äì –±—ã—Ç—å —Ç–∞–∫–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.",
  "–ú—ã –≤—Å–µ–º –∫–æ–ª–ª–µ–∫—Ç–∏–≤–æ–º –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!‚ú®",
  " –ñ–µ–ª–∞–µ–º –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è —Ç–∞–∫–∏–º –∂–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º,",
  " –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω—ã–º,",
  "–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º,",
  "—Ç–∞–∫—Ç–∏—á–Ω—ã–º,",
  "—Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–º,",
  " —É–º–µ—é—â–∏–º –ø—Ä–µ–¥—É–≥–∞–¥—ã–≤–∞—Ç—å –≤—Å–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞ –¥–≤–∞ —à–∞–≥–∞ –≤–ø–µ—Ä–µ–¥.",
  "–ú—ã –∂–µ–ª–∞–µ–º —Ç–µ–±–µ –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —É—Å–ø–µ—Ö–æ–≤ –∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞,",
  "–Ω–æ",
  "–∏..",
  "—Å–µ–º–µ–π–Ω–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è",
  "–∏..",
  "–æ–±—ã—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Å—á–∞—Å—Ç—å—è.üéâ",
  "–ß—Ç–æ–±—ã —Ç–≤–æ—è –∂–∏–∑–Ω—å —Ç–æ–ª—å–∫–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–ª–∞ —Ç–µ–±—è –∫ –Ω–æ–≤—ã–º –ø–æ–¥–≤–∏–≥–∞–º –≤ —Ä–∞–±–æ—Ç–µ,",
  "–∞ —Ä–∞–±–æ—Ç–∞ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞–ª–∞ –∫ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—é –∏ –∫–æ–º—Ñ–æ—Ä—Ç—É –≤ —Ç–≤–æ–µ–º –¥–æ–º–µ.",
  " –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéÇ"


];
const sisterChat = [
  "Sister? ü§î",
  "You know what Shalini...",
  "I have something to confess... üí´",
  "While sisters are precious...",
  "I've always felt our bond is different... ‚ú®",
  "The way we understand each other...",
  "The way we share everything...",
  "It feels more like best friends! üí´",
  "Would you like to be my Best Friend instead? üåü"
];
const bestFriendMessages = [
  "Yaara teri yaari ko maine toh khuda mana üåü",
  "Teri dosti ne mujhe jeena sikhaya hai ‚ú®",
  "Tere jaisa yaar kaha, kaha aisa yarana üíñ",
  "Dosti ki hai, nibhani to padegi",
  "Koi dhundta hai kisi ko,",
  "Koi kisi ka sahara hai üåü",
  "You're not just my friend Shalini,",
  "You're my favorite person to annoy! üòã",
  "Let's be Best Friends Forever! ü§ó"
];

function createStars() {
  const starsContainer = document.createElement("div");
  starsContainer.className = "stars";
  for (let i = 0; i < 200; i++) {
    const star = document.createElement("div");
    star.className = "star";
    star.style.width = `${Math.random() * 3}px`;
    star.style.height = star.style.width;
    star.style.left = `${Math.random() * 100}%`;
    star.style.top = `${Math.random() * 100}%`;
    star.style.setProperty("--duration", `${Math.random() * 3 + 1}s`);
    starsContainer.appendChild(star);
  }
  document.body.appendChild(starsContainer);
}

function createEmoji() {
  const emojis = ["üíñ", "‚≠ê", "‚ú®", "üéâ", "üéÇ", "üéà"];
  const emoji = document.createElement("div");
  emoji.className = "emoji";
  emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];
  emoji.style.left = Math.random() * window.innerWidth + "px";
  emoji.style.top = "-50px";
  document.body.appendChild(emoji);
  const animation = emoji.animate(
    [
      {
        transform: "translateY(0) rotate(0deg)"
      },
      {
        transform: `translateY(${window.innerHeight + 50}px) rotate(${Math.random() * 360
          }deg)`
      }
    ],
    {
      duration: 3000,
      easing: "linear"
    }
  );
  animation.onfinish = () => emoji.remove();
}

function stopAllMusic() {
  const audios = ["bgMusic", "sisterMusic", "bestFriendMusic"];
  audios.forEach((id) => {
    const audio = document.getElementById(id);
    if (audio) {
      audio.pause();
      audio.currentTime = 0;
    }
  });
}

function playAudio(audioId) {
  const audio = document.getElementById(audioId);
  if (audio) {
    audio.volume = 0.5;
    audio.play().catch((err) => console.log("Audio play failed:", err));
  }
}
let emojiInterval;
async function typeWriter(text) {
  const wishesElement = document.getElementById("wishes");
  wishesElement.style.opacity = 1;
  wishesElement.innerHTML = "";
  wishesElement.className = "wishes neon-text";
  for (let char of text) {
    wishesElement.innerHTML += char;
    await new Promise((resolve) => setTimeout(resolve, 100));
  }
  await new Promise((resolve) => setTimeout(resolve, 1000));
}
let isMuted = false;
const muteButton = document.getElementById("muteButton");
muteButton.addEventListener("click", () => {
  const audios = ["bgMusic", "sisterMusic", "bestFriendMusic"];
  isMuted = !isMuted;
  audios.forEach((id) => {
    const audio = document.getElementById(id);
    if (audio) {
      audio.muted = isMuted;
    }
  });
  // Update button text
  muteButton.textContent = isMuted ? "üîá" : "üîä";
});
async function makeChoice(choice) {
  clearInterval(emojiInterval);
  const wishesElement = document.getElementById("wishes");
  document.getElementById("choices").style.display = "none";
  stopAllMusic();
  if (choice === "sister") {
    document.body.classList.add("sad-theme");
    const sisterAudio = document.getElementById("sisterMusic");
    sisterAudio.muted = isMuted;
    try {
      const playPromise = sisterAudio.play();
      if (playPromise !== undefined) {
        playPromise.catch((error) => {
          console.log("Audio play failed:", error);
        });
      }
    } catch (err) {
      console.log("Audio play failed:", err);
    }
    for (let message of sisterChat) {
      await typeWriter(message);
    }
    document.getElementById("choices").innerHTML = `
                    <button class="choice-btn" onclick="makeChoice('bestfriend')">Best Friend</button>
                `;
    document.getElementById("choices").style.display = "block";
    document.querySelector(".choice-btn").style.opacity = 1;
  } else {
    document.body.classList.remove("sad-theme");
    const bestFriendAudio = document.getElementById("bestFriendMusic");
    bestFriendAudio.muted = isMuted;
    try {
      const playPromise = bestFriendAudio.play();
      if (playPromise !== undefined) {
        playPromise.catch((error) => {
          console.log("Audio play failed:", error);
        });
      }
    } catch (err) {
      console.log("Audio play failed:", err);
    }
    emojiInterval = setInterval(createEmoji, 300);
    for (let message of bestFriendMessages) {
      await typeWriter(message);
    }
    setTimeout(() => {
      setTimeout(() => {
        window.open(
          "https://www.instagram.com/direct/t/harshpreet_singh_honey",
          "_blank"
        );
        wishesElement.innerHTML =
          "Check your Instagram, Shalini! üì±‚ú®<br>üíñI am thereüíñ";
      }, 1000);
    }, 2000);
  }
}
document.getElementById("startBtn").addEventListener("click", async () => {
  document.getElementById("startBtn").style.display = "none";
  document.getElementById("wishesContainer").classList.remove("hidden");
  const bgAudio = document.getElementById("bgMusic");
  bgAudio.muted = isMuted;
  try {
    const playPromise = bgAudio.play();
    if (playPromise !== undefined) {
      playPromise.catch((error) => {
        console.log("Audio play failed:", error);
      });
    }
  } catch (err) {
    console.log("Audio play failed:", err);
  }
  emojiInterval = setInterval(createEmoji, 300);
  for (let wish of wishes) {
    await typeWriter(wish);
  }
  document.getElementById("choices").classList.remove("hidden");
  document.querySelectorAll(".choice-btn").forEach((btn) => {
    btn.style.opacity = 1;
  });
});
document.addEventListener("click", async function initAudio() {
  const audios = ["bgMusic", "sisterMusic", "bestFriendMusic"];
  for (let id of audios) {
    const audio = document.getElementById(id);
    try {
      await audio.play();
      audio.pause();
      audio.currentTime = 0;
    } catch (err) {
      console.log("Audio initialization failed:", err);
    }
  }
  document.removeEventListener("click", initAudio);
});

createStars();
let honey = document.getElementById("body");
function fullScreen() {
  honey.requestFullscreen();
}